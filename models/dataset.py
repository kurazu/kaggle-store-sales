from typing import List

import tensorflow as tf
import tfx.v1 as tfx
from tensorflow_metadata.proto.v0 import schema_pb2
from tfx_bsl.public import tfxio

from preprocessing.features import TRANSFORMED_TARGET_KEY


def input_fn(
    file_patterns: List[str],  # TFRecord file names
    # TFX dataset loading helper
    data_accessor: tfx.components.DataAccessor,  # type:ignore[name-defined]
    schema: schema_pb2.Schema,  # Dataset schema
    batch_size: int = 128,  # batch size
) -> tf.data.Dataset:
    """Generates features and label for tuning/training."""
    return data_accessor.tf_dataset_factory(
        file_patterns,
        tfxio.TensorFlowDatasetOptions(
            batch_size=batch_size,
            # automatically pop the label so the dataset contains tuples (features, labels)
            label_key=TRANSFORMED_TARGET_KEY,
            # We say that the whole dataset is a single epoch. After the first epoch
            # of training Tensorflow will remember the size of the dataset
            # (number of batches in epoch) and will provide correct ETA times
            num_epochs=1,
        ),
        schema,  # parse the examples into schema generated by SchemaGen component
    )
